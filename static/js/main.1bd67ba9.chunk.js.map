{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","components/layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","btnStyle","onClick","delTodo","Component","color","border","cursor","float","borderRadius","Todos","todos","map","components_TodoItem","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","defineProperty","target","name","display","flex","placeholder","className","About","Fragment","headerStyle","textAlign","linkStyle","Header","Link","to","App","axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","BrowserRouter","layout_Header","Route","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1bd67ba9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            background: '#f4f4f4',\r\n            padding: '10px',\r\n            borderBottom: '1px #ccc dotted',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const  { id, title } = this.props.todo;\r\n        return (\r\n            <div style = {this.getStyle()}>\r\n                <p>\r\n                    <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} /> {' '}\r\n                    {title}\r\n                    <button style={btnStyle} onClick={this.props.delTodo.bind(this, id)}>X</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    cursor: 'pointer',\r\n    float: 'right',\r\n    borderRadius: '5px'\r\n}\r\n\r\n\r\nexport default TodoItem;","import React, {Component} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n    render() {\r\n        return this.props.todos.map((todo) => (\r\n            <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>\r\n        )\r\n        );\r\n    }\r\n}\r\n\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos;","import React,  {Component} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddTodo extends Component {\r\n    state ={\r\n        title: ''\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title: ''});\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name] : e.target.value });\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} style={{display: 'flex'}}>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"title\"\r\n                    style={{flex: '10', padding: '5px'}}\r\n                    placeholder=\"Add Todo...\"\r\n                    value={this.state.title}\r\n                    onChange={this.onChange}\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Submit\"\r\n                    className=\"btn\"\r\n                    style={{flex: '1'}}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    addTodo: PropTypes.func.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This is the TodoList app v1.0.0. It is a part of a React crash course.</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return(\r\n        <header style={headerStyle}>\r\n            <h1>TodoList</h1>\r\n            <Link style={ linkStyle }to=\"\">Home</Link> | <Link style = { linkStyle } to=\"/about\">About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport Header from './components/layout/Header';\nimport uuid from 'uuid';\nimport './App.css';\nimport axios from 'axios';\n\n\nclass App extends Component {\n  state = {\n    todos : []\n  }\n\n  componentDidMount() {\n   axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({ todos: res.data }))  \n  }\n\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id == id) {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    })});\n  }\n  \n  delTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }));\n  }\n\n  addTodo = (title) => {\n    axios.post('https://jsonplaceholder.typicode.com/todos', { title, completed: false})\n    .then(res => this.setState({todos: [...this.state.todos, res.data]}));\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className = \"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo = {this.addTodo}/>\n                <Todos todos={this.state.todos} markComplete = {this.markComplete} delTodo={this.delTodo}/>\n              </React.Fragment>\n            )}/>\n            <Route path=\"/about\" component = {About}/>\n          </div>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}